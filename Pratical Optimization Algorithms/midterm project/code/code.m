function [X, iter, found, error, r] = code(eps1, eps2, maxIter, tau)
    syms X1 X2 X3 X4 X5;
  %  X0 = [-252;316;-131;-130;69];
   % X0 = [4, 7, -4, -1, 99]';
    X0 = [1; 1; 1; 1; 1];
    t = [X1; X2; X3; X4; X5];
    xdata = [1;2;4;6;8;10;12;14;16;18;20;22;24;26;28;30;32;34;36;38;40;42;44;46;48;50;52;54;56;58;60;65;70;75;80;85;90;95;100;110;120;130;140;150;175;200;225;250;300;400;500];
    ydata = [0.600000000000000;1.19000000000000;2.56000000000000;4.37000000000000;6.68000000000000;9.58000000000000;12.9600000000000;16.8900000000000;21.4000000000000;26.5000000000000;32.1200000000000;37.6000000000000;43.1400000000000;48.2700000000000;53.1600000000000;57.5400000000000;61.6900000000000;65.1600000000000;68.6300000000000;71.9400000000000;74.6900000000000;77.2900000000000;79.5500000000000;81.7100000000000;83.5200000000000;85.0800000000000;86.5900000000000;87.7000000000000;88.9300000000000;89.9500000000000;90.8500000000000;92.7300000000000;94.0600000000000;95.1000000000000;95.8400000000000;96.4200000000000;96.8800000000000;97.2500000000000;97.4900000000000;97.9100000000000;98.2100000000000;98.4400000000000;98.6200000000000;98.7700000000000;99.0300000000000;99.2000000000000;99.3200000000000;99.4100000000000;99.5300000000000;99.6500000000000;99.7200000000000];
    
    r = X5 * (1/(1+exp(X1))).^((1/(1+exp(X2))).^((1-(1/(1+exp(X3))).^xdata).^(1+exp(X4)))) - ydata;
    J = jacobian(r, t);

    
    v = 2;
    X = X0;
    iter = 0;

    j0 = double(subs(J, t, X));
    r0 = double(subs(r, t, X));
    A0 = j0' * j0;
    g = j0' * r0; 
    found = (norm(g, Inf) <= eps1);
    miu = tau * max(diag(A0));
    
    while(~found && iter < maxIter)
        iter = iter + 1;
        
        h_lm = (A0 + miu * diag(ones(5, 1))) \ (-g);
        if(norm(h_lm) <= (eps2 * (norm(X) + eps2)))
            found = 1;
            r_0 = double(subs(r, t, X));
            error = sum(r0.^2)/51;
            r = r0;
        else
            X_new = X + h_lm;
            r_new = double(subs(r, t, X_new));
            r_0 = double(subs(r, t, X));
            Q = (r_0' * r0 - r_new' * r_new) / 2 /...
                (0.5 * h_lm' * (miu * h_lm - g));
            if Q > 0
                X = X_new
                j0 = double(subs(J, t, X));
                r0 = double(subs(r, t, X));
                A0 = j0' * j0;
                g = j0' * r0; 
                found = (norm(g, Inf) <= eps1);
                miu = miu * max([1/3, 1 - (2 * Q - 1)^3]);
                v = 2;
            else
                miu = miu * v;
                v = 2 * v;
            end
        end
end